// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Daniel Hawton",
            "email": "wm@denartcc.org"
        },
        "license": {
            "name": "Apache",
            "url": "https://github.com/kzdv/api2/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/user": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get User Information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Patch User Information",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/login": {
            "get": {
                "tags": [
                    "user",
                    "oauth"
                ],
                "summary": "Login to account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redirect URL",
                        "name": "redirect",
                        "in": "path"
                    }
                ],
                "responses": {
                    "307": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/login/callback": {
            "get": {
                "tags": [
                    "user",
                    "oauth"
                ],
                "summary": "Login callback",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "307": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "certifications": {
                    "$ref": "#/definitions/dto.UserResponseCertifications"
                },
                "cid": {
                    "type": "integer"
                },
                "controller_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "operating_initials": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.UserResponseCertifications": {
            "type": "object",
            "properties": {
                "approach": {
                    "type": "string"
                },
                "delivery": {
                    "type": "string"
                },
                "enroute": {
                    "type": "string"
                },
                "ground": {
                    "type": "string"
                },
                "local": {
                    "type": "string"
                }
            }
        },
        "response.R": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.denartcc.org",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "KZDV API",
	Description:      "Session Cookie",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
