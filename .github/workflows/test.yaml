name: Test
on:
  push:
    branches:
      - 'dev'
      - 'main'
  pull_request:
    branches:
      - '*'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout Repo
    - name: Setup go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19.0
    - name: Run tests
      run: make test
    - name: Test docs
      run: make docs
  build:
    name: Build Image
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
      name: Checkout Repo
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19.0
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build
      run: make build
    - name: Build Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/api:${{ steps.vars.outputs.sha_short }} .
    - name: Push Image
      if: ${{ github.event_name == 'push' }}
      run: docker push ${{ secrets.DOCKER_USERNAME }}/api:${{ steps.vars.outputs.sha_short }}
  deploy:
    name: Deploy Image to Cluster
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' }}
    steps:
    - uses: actions/checkout@v2
      name: Checkout Repo
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Deploy image to cluster (prod)
      uses: actions-hub/kubectl@v1.24.3
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        KUBE_CONFIG: ${{ secrets.CI_KUBECONFIG }}
      with:
        args: set image -n prod deployment/api *=${{ secrets.DOCKER_USERNAME }}/api:${{ steps.vars.outputs.sha_short }}
    - name: Deploy image to cluster (dev)
      uses: actions-hub/kubectl@v1.24.3
      if: ${{ github.ref == 'refs/heads/dev' }}
      env:
        KUBE_CONFIG: ${{ secrets.CI_KUBECONFIG }}
      with:
        args: set image -n dev deployment/api *=${{ secrets.DOCKER_USERNAME }}/api:${{ steps.vars.outputs.sha_short }}

    - name: Deploy image to cluster (prod runner)
      uses: actions-hub/kubectl@v1.24.3
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        KUBE_CONFIG: ${{ secrets.CI_KUBECONFIG }}
      with:
        args: set image -n prod deployment/runner *=${{ secrets.DOCKER_USERNAME }}/api:${{ steps.vars.outputs.sha_short }}
    - name: Deploy image to cluster (dev runner)
      uses: actions-hub/kubectl@v1.24.3
      if: ${{ github.ref == 'refs/heads/dev' }}
      env:
        KUBE_CONFIG: ${{ secrets.CI_KUBECONFIG }}
      with:
        args: set image -n dev deployment/runner *=${{ secrets.DOCKER_USERNAME }}/api:${{ steps.vars.outputs.sha_short }}

    - name: Wait for ready (prod)
      uses: actions-hub/kubectl@v1.24.3
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        KUBE_CONFIG: ${{ secrets.CI_KUBECONFIG }}
      with:
        args: rollout status -n prod deployment/api
    - name: Wait for ready (dev)
      uses: actions-hub/kubectl@v1.24.3
      if: ${{ github.ref == 'refs/heads/dev' }}
      env:
        KUBE_CONFIG: ${{ secrets.CI_KUBECONFIG }}
      with:
        args: rollout status -n dev deployment/api

    - name: Wait for ready (prod runner)
      uses: actions-hub/kubectl@v1.24.3
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        KUBE_CONFIG: ${{ secrets.CI_KUBECONFIG }}
      with:
        args: rollout status -n prod deployment/runner
    - name: Wait for ready (dev runner)
      uses: actions-hub/kubectl@v1.24.3
      if: ${{ github.ref == 'refs/heads/dev' }}
      env:
        KUBE_CONFIG: ${{ secrets.CI_KUBECONFIG }}
      with:
        args: rollout status -n dev deployment/runner
